name: CI/CD Pipeline

on:
  push:
    branches: [ dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --workspace

    - name: Run clippy
      run: cargo clippy --workspace

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push K-transaction-processor
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/DEV/Dockerfile.K-transaction-processor
        push: true
        tags: |
          thesheepcat/k-transaction-processor:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push K-webserver
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/DEV/Dockerfile.K-webserver
        push: true
        tags: |
          thesheepcat/k-webserver:dev          
        cache-from: type=gha
        cache-to: type=gha,mode=max